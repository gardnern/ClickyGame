{"version":3,"sources":["components/Navbar/index.js","components/Jumbotron/index.js","components/DogCard/index.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","this","props","score","Component","Jumbotron","DogCard","onClick","imageClick","src","img","id","alt","App","state","dog","clickedDog","event","currentDog","target","_this","indexOf","setState","sort","b","Math","random","alert","concat","_this2","components_Navbar","components_Jumbotron","map","components_DogCard","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"k/BAiBeA,0LAZX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACZH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,oBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,UAAkCC,KAAKC,MAAMC,gBAPlCC,cCMNC,SANG,kBACjBR,EAAAC,EAAAC,cAAA,UAAQC,UAAY,UACnBH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,wICmBaO,SAjBC,SAAAJ,GAAK,OAEnBL,EAAAC,EAAAC,cAAA,OACAC,UAAU,OACVO,QAAWL,EAAMM,YACfX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEfH,EAAAC,EAAAC,cAAA,OAAMU,IAAKP,EAAMQ,IACjBC,GAAKT,EAAMS,GACXC,IAAKV,EAAMQ,iBCmEAG,oNA1EbC,MAAQ,CACNC,IAAKA,EACLC,WAAY,GACZb,MAAO,KAITK,WAAa,SAAAS,GACX,IAAMC,EAAaD,EAAME,OAAOP,IAE9BQ,EAAKN,MAAME,WAAWK,QAAQH,IAAe,GAI7CE,EAAKE,SAAS,CACZP,IAAKK,EAAKN,MAAMC,IAAIQ,KAAK,SAASzB,EAAG0B,GACnC,MAAO,GAAMC,KAAKC,WAEpBV,WAAY,GACZb,MAAO,IAEPwB,MAAM,0BAIRP,EAAKE,SACH,CACEP,IAAKK,EAAKN,MAAMC,IAAIQ,KAAK,SAASzB,EAAG0B,GACnC,MAAO,GAAMC,KAAKC,WAEpBV,WAAYI,EAAKN,MAAME,WAAWY,OAChCV,GAEFf,MAAOiB,EAAKN,MAAMX,MAAQ,GAG5B,WAC2B,KAArBiB,EAAKN,MAAMX,QACbwB,MAAM,YACNP,EAAKE,SAAS,CACZP,IAAKK,EAAKN,MAAMC,IAAIQ,KAAK,SAASzB,EAAG0B,GACnC,MAAO,GAAMC,KAAKC,WAEpBV,WAAY,GACZb,MAAO,gFASV,IAAA0B,EAAA5B,KACP,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+B,EAAD,CACE3B,MAAOF,KAAKa,MAAMX,QAEpBN,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZC,KAAKa,MAAMC,IAAIiB,IAAI,SAAAjB,GAAG,OACrBlB,EAAAC,EAAAC,cAACkC,EAAD,CACEzB,WAAYqB,EAAKrB,WACjBG,GAAII,EAAIJ,GACRuB,IAAKnB,EAAIJ,GACTD,IAAKK,EAAIL,iBAnELN,oBCHlB+B,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7aeb26f6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-default navbar-fixed-top\">\r\n         <ul>\r\n          <li className=\"itemLeft\">Test Your Memory</li>\r\n          <li className=\"itemCenter\"></li>\r\n          <li className=\"itemRight\">Score: {this.props.score}</li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\nimport \"./Jumbotron.css\";\n\nconst Jumbotron = () => (\n\t<header className = \"header\">\n\t\t<h1>Doggo's Clicky Game!</h1>\n\t\t<h2>Click on any image to earn a point, but don't click on the same picture more than once. Click all 12 pics, and you win.</h2>\n\t</header>\n);\nexport default Jumbotron;\n","//sets up the reusable FriendCard component\nimport React from \"react\";\nimport \"./DogCard.css\";\n// import img from \"./img\";\n\n\n\n//pass the image into each card so all 12 are rendered\nconst DogCard = props => (\n  \n  <div \n  className=\"card\" \n  onClick = {props.imageClick}>\n    <div className=\"img-container\">\n  \n    <img  src={props.img}\n    id= {props.id} \n    alt={props.img} \n\n />\n    </div>\n  </div>\n);\n\n// console.log(img);\nexport default DogCard;\n","//imports dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport DogCard from \"./components/DogCard\";\nimport dog from \"./dog\";\nimport \"./App.css\";\n\n//sets state to 0 or empty\nclass App extends Component {\n  state = {\n    dog: dog,\n    clickedDog: [],\n    score: 0\n  };\n\n//when you click on a card ... the dog is taken out of the array\n  imageClick = event => {\n    const currentDog = event.target.alt;\n    const DogAlreadyClicked =\n      this.state.clickedDog.indexOf(currentDog) > -1;\n\n//if you click on a dog that has already been selected, the game is reset and cards reordered\n    if (DogAlreadyClicked) {\n      this.setState({\n        dog: this.state.dog.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedDog: [],\n        score: 0\n      });\n        alert(\"You lose. Play again?\");\n\n//if you click on an available dog, your score is increased and cards reordered\n    } else {\n      this.setState(\n        {\n          dog: this.state.dog.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedDog: this.state.clickedDog.concat(\n            currentDog\n          ),\n          score: this.state.score + 1\n        },\n       \n        () => {\n          if (this.state.score === 12) {\n            alert(\"You Win!\");\n            this.setState({\n              dog: this.state.dog.sort(function(a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedDog: [],\n              score: 0\n            });\n          }\n        }\n      );\n    }\n  };\n\n\n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n        />\n        <Jumbotron />\n        <div className=\"wrapper\">\n          {this.state.dog.map(dog => (\n            <DogCard\n              imageClick={this.imageClick}\n              id={dog.id}\n              key={dog.id}\n              img={dog.img}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}